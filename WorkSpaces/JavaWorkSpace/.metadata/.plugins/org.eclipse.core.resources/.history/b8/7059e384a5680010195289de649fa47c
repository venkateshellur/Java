package com.Threadingconcepts;

import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

class CallableTask implements Callable<String> {

	private String name;

	public CallableTask(String name) {
		this.name = name;
	}

	@Override
	public String call() throws Exception {
		Thread.sleep(1000);
		return "Hello " + name;
	}

}

public class CallableRunner {

	public static void main(String[] args) {
		callableRunnerTask();
	}

	private static void callableRunnerTask() throws InterruptedException, ExecutionException {
		ExecutorService eS = Executors.newFixedThreadPool(1);
		Future<String> welcomeFuture = eS.submit(new CallableTask("Venky"));
		System.out.println("New CallableTask(\"Venky\") Executed");
		String welcomeMesssage = welcomeFuture.get();
		System.out.println(welcomeMesssage);
		System.out.println("Executing Main completed...");
	}

}
